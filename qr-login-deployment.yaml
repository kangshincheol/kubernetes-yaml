apiVersion: v1
kind: Namespace
metadata:
  name: qr-login-app
  labels:
    managed-by: portainer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: qr-config
  namespace: qr-login-app
data:
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  SECRET_KEY: "your_secret_key_here"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qr-pvc
  namespace: qr-login-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: qr-login-app
type: Opaque
data:
  redis-password: c3VwZXJzZWNyZXQ=  # "supersecret"의 base64 인코딩

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qr-login-service
  namespace: qr-login-app
  labels:
    app: qr-login
    managed-by: portainer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: qr-login
  template:
    metadata:
      labels:
        app: qr-login
    spec:
      containers:
        - name: qr-login-container
          image: myrepo/qr-login-service:latest
          ports:
            - containerPort: 8081
          envFrom:
            - configMapRef:
                name: qr-config
          volumeMounts:
            - mountPath: "/app/data"
              name: qr-storage
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
      volumes:
        - name: qr-storage
          persistentVolumeClaim:
            claimName: qr-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: qr-login-app
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password

---
apiVersion: v1
kind: Service
metadata:
  name: qr-login-service
  namespace: qr-login-app
  labels:
    managed-by: portainer
spec:
  selector:
    app: qr-login
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  type: LoadBalancer
